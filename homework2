//1题
#include <stdio.h>

// 判断是否为闰年
int isLeapYear(int year) {
    return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
}

// 计算星期几
int dayOfWeek(int year, int month, int day) {
    int dayNum = 0;
    int daysInMonth[] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
    int w = 2; // 2024年10月29日是周二，星期数为2（0=周日，1=周一，...，6=周六）

    // 累加从2024年1月1日到给定日期的总天数
    for (int i = 0; i < month - 1; i++) {
        dayNum += daysInMonth[i];
    }
    dayNum += day;

    // 累加年份的天数
    for (int i = 2024; i < year; i++) {
        dayNum += isLeapYear(i) ? 366 : 365;
    }

    // 累加月份的天数
    if (month > 2 && isLeapYear(year)) {
        dayNum += 1; // 如果是闰年且月份大于2月，则加一天
    }

    // 计算星期几
    w = (w + dayNum - 1) % 7;
    return w;
}

int main() {
    int year, month, day;
    printf("请输入年 月 日（例如：2024 10 29）: ");
    scanf("%d %d %d", &year, &month, &day);

    int w = dayOfWeek(year, month, day);
    printf("%d年%d月%d日是星期%d。\n", year, month, day, w == 0 ? 7 : w); // 0=周日，1=周一，...，6=周六
    return 0;
}
//2题
#include <stdio.h>

// 判断是否为闰年
int isLeapYear(int year) {
    return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
}

// 获取指定月份的天数
int getDaysInMonth(int year, int month) {
    int daysInMonth[] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
    if (month == 2 && isLeapYear(year)) {
        return 29;
    }
    return daysInMonth[month - 1];
}

// 计算一个月的第一天是星期几
int getFirstDayOfWeek(int year, int month) {
    int dayOfWeek = 2; // 2024年10月29日是周二，星期数为2（0=周日，1=周一，...，6=周六）
    int daysInMonth[] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
    int daysBeforeMonth = 0;

    // 累加年份的天数
    for (int i = 2024; i < year; i++) {
        daysBeforeMonth += isLeapYear(i) ? 366 : 365;
    }

    // 累加月份的天数
    for (int i = 0; i < month - 1; i++) {
        daysBeforeMonth += daysInMonth[i];
    }

    // 如果是闰年且月份大于2月，则加一天
    if (month > 2 && isLeapYear(year)) {
        daysBeforeMonth += 1;
    }

    // 计算星期几
    dayOfWeek = (dayOfWeek + daysBeforeMonth + 1) % 7;
    return dayOfWeek;
}

// 输出日历
void printCalendar(int year, int month) {
    int days = getDaysInMonth(year, month);
    int firstDay = getFirstDayOfWeek(year, month);

    printf("\n%d年%d月的日历：\n", year, month);
    printf("日 一 二 三 四 五 六\n");

    // 打印空格以对齐第一天
    for (int i = 0; i < firstDay; i++) {
        printf("   ");
    }

    for (int day = 1; day <= days; day++) {
        printf("%2d ", day);
        if ((day + firstDay) % 7 == 0) {
            printf("\n");
        }
    }
    if ((days + firstDay) % 7 != 0) {
        printf("\n");
    }
}

int main() {
    int year, month;
    printf("请输入年和月（例如：2024 10）: ");
    scanf("%d %d", &year, &month);

    printCalendar(year, month);
    return 0;
}
//3题
#include <stdio.h>

// 判断是否为闰年
int isLeapYear(int year) {
    return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
}

// Zeller公式计算星期几
int zeller(int year, int month, int day) {
    if (month < 3) {
        month += 12;
        year -= 1;
    }
    int k = year % 100;
    int j = year / 100;
    int h = day + 13 * (month + 1) / 5 + k + k / 4 + j / 4 + 5 * j;
    h = h % 7;
    return (h + 5) % 7; // 0=周六，1=周日，2=周一，...，6=周五
}

// 获取指定月份的天数
int getDaysInMonth(int year, int month) {
    int daysInMonth[] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
    if (month == 2 && isLeapYear(year)) {
        return 29;
    }
    return daysInMonth[month - 1];
}

// 输出日历
void printCalendar(int year, int month) {
    int days = getDaysInMonth(year, month);
    int firstDay = zeller(year, month, 1); // 该月第一天是星期几

    printf("\n%d年%d月的日历：\n", year, month);
    printf("日 一 二 三 四 五 六\n");

    // 打印空格以对齐第一天
    for (int i = 0; i < firstDay; i++) {
        printf("   ");
    }

    for (int day = 1; day <= days; day++) {
        printf("%2d ", day);
        if ((day + firstDay) % 7 == 0) {
            printf("\n");
        }
    }
    if ((days + firstDay) % 7 != 0) {
        printf("\n");
    }
}

// 输出指定年份的完整日历
void printYearCalendar(int year) {
    printf("%d年的日历：\n", year);
    for (int month = 1; month <= 12; month++) {
        printCalendar(year, month);
    }
}

int main() {
    int year;
    printf("请输入年份（例如：2024）: ");
    scanf("%d", &year);

    printYearCalendar(year);
    return 0;
}
